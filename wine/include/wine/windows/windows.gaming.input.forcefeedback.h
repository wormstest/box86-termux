/*** Autogenerated by WIDL 6.0 from include/windows.gaming.input.forcefeedback.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __windows_gaming_input_forcefeedback_h__
#define __windows_gaming_input_forcefeedback_h__

/* Forward declarations */

#ifndef ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Gaming {
            namespace Input {
                namespace ForceFeedback {
                    interface IForceFeedbackMotor;
                }
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackMotor_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackMotor_FWD_DEFINED__
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Gaming {
            namespace Input {
                namespace ForceFeedback {
                    class ForceFeedbackMotor;
                }
            }
        }
    }
}
#else
typedef struct __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackMotor __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackMotor;
#endif /* defined __cplusplus */
#endif /* defined ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackMotor_FWD_DEFINED__ */

#ifndef ____FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_FWD_DEFINED__
#define ____FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_FWD_DEFINED__
typedef interface __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Foundation {
            template<> struct IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult>;
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____FIAsyncOperation_1_ForceFeedbackLoadEffectResult_FWD_DEFINED__
#define ____FIAsyncOperation_1_ForceFeedbackLoadEffectResult_FWD_DEFINED__
typedef interface __FIAsyncOperation_1_ForceFeedbackLoadEffectResult __FIAsyncOperation_1_ForceFeedbackLoadEffectResult;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Foundation {
            template<> struct IAsyncOperation<ABI::ForceFeedbackLoadEffectResult>;
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                template<> struct IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*>;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <inspectable.h>
#include <windows.foundation.h>

#ifdef __cplusplus
extern "C" {
#endif

#ifndef ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect_FWD_DEFINED__
#define ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect_FWD_DEFINED__
typedef interface __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Gaming {
            namespace Input {
                namespace ForceFeedback {
                    interface IForceFeedbackEffect;
                }
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____FIAsyncOperation_1_ForceFeedbackLoadEffectResult_FWD_DEFINED__
#define ____FIAsyncOperation_1_ForceFeedbackLoadEffectResult_FWD_DEFINED__
typedef interface __FIAsyncOperation_1_ForceFeedbackLoadEffectResult __FIAsyncOperation_1_ForceFeedbackLoadEffectResult;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Foundation {
            template<> struct IAsyncOperation<ABI::ForceFeedbackLoadEffectResult>;
        }
    }
}
#endif /* __cplusplus */
#endif

#ifndef ____FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_FWD_DEFINED__
#define ____FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_FWD_DEFINED__
typedef interface __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor;
#ifdef __cplusplus
namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                template<> struct IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*>;
            }
        }
    }
}
#endif /* __cplusplus */
#endif

#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifdef __cplusplus
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Gaming {
            namespace Input {
                namespace ForceFeedback {
                    enum ForceFeedbackEffectAxes {
                        ForceFeedbackEffectAxes_None = 0x0,
                        ForceFeedbackEffectAxes_X = 0x1,
                        ForceFeedbackEffectAxes_Y = 0x2,
                        ForceFeedbackEffectAxes_Z = 0x4
                    };
                }
            }
        }
    }
}
extern "C" {
#else /* __cplusplus */
enum __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackEffectAxes {
    ForceFeedbackEffectAxes_None = 0x0,
    ForceFeedbackEffectAxes_X = 0x1,
    ForceFeedbackEffectAxes_Y = 0x2,
    ForceFeedbackEffectAxes_Z = 0x4
};
#ifdef WIDL_USING_WINDOWS_GAMING_INPUT_FORCEFEEDBACK_FORCEFEEDBACKEFFECTAXES
#define ForceFeedbackEffectAxes __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackEffectAxes
#endif /* WIDL_USING__WINDOWS_GAMING_INPUT_FORCEFEEDBACK_FORCEFEEDBACKEFFECTAXES */
#endif /* __cplusplus */

#endif /* WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifdef __cplusplus
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Gaming {
            namespace Input {
                namespace ForceFeedback {
                    enum ForceFeedbackLoadEffectResult {
                        ForceFeedbackLoadEffectResult_Succeeded = 0,
                        ForceFeedbackLoadEffectResult_EffectStorageFull = 1,
                        ForceFeedbackLoadEffectResult_EffectNotSupported = 2
                    };
                }
            }
        }
    }
}
extern "C" {
#else /* __cplusplus */
enum __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackLoadEffectResult {
    ForceFeedbackLoadEffectResult_Succeeded = 0,
    ForceFeedbackLoadEffectResult_EffectStorageFull = 1,
    ForceFeedbackLoadEffectResult_EffectNotSupported = 2
};
#ifdef WIDL_USING_WINDOWS_GAMING_INPUT_FORCEFEEDBACK_FORCEFEEDBACKLOADEFFECTRESULT
#define ForceFeedbackLoadEffectResult __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackLoadEffectResult
#endif /* WIDL_USING__WINDOWS_GAMING_INPUT_FORCEFEEDBACK_FORCEFEEDBACKLOADEFFECTRESULT */
#endif /* __cplusplus */

#endif /* WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000 */
/*****************************************************************************
 * IForceFeedbackMotor interface
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Interface is a part of the implementation of type Windows.Gaming.Input.ForceFeedback.ForceFeedbackMotor
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_INTERFACE_DEFINED__
#define ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_INTERFACE_DEFINED__

DEFINE_GUID(IID___x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor, 0x8d3d417c, 0xa5ea, 0x4516, 0x80,0x26, 0x2b,0x00,0xf7,0x4e,0xf6,0xe5);
#if defined(__cplusplus) && !defined(CINTERFACE)
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Gaming {
            namespace Input {
                namespace ForceFeedback {
                    MIDL_INTERFACE("8d3d417c-a5ea-4516-8026-2b00f74ef6e5")
                    IForceFeedbackMotor : public IInspectable
                    {
                        virtual HRESULT STDMETHODCALLTYPE get_AreEffectsPaused(
                            boolean *value) = 0;

                        virtual HRESULT STDMETHODCALLTYPE get_MasterGain(
                            DOUBLE *value) = 0;

                        virtual HRESULT STDMETHODCALLTYPE put_MasterGain(
                            DOUBLE value) = 0;

                        virtual HRESULT STDMETHODCALLTYPE get_IsEnabled(
                            boolean *value) = 0;

                        virtual HRESULT STDMETHODCALLTYPE get_SupportedAxes(
                            enum ForceFeedbackEffectAxes *value) = 0;

                        virtual HRESULT STDMETHODCALLTYPE LoadEffectAsync(
                            IForceFeedbackEffect *effect,
                            IAsyncOperation<ABI::ForceFeedbackLoadEffectResult> **asyncOperation) = 0;

                        virtual HRESULT STDMETHODCALLTYPE PauseAllEffects(
                            ) = 0;

                        virtual HRESULT STDMETHODCALLTYPE ResumeAllEffects(
                            ) = 0;

                        virtual HRESULT STDMETHODCALLTYPE StopAllEffects(
                            ) = 0;

                        virtual HRESULT STDMETHODCALLTYPE TryDisableAsync(
                            IAsyncOperation<ABI::boolean> **asyncOperation) = 0;

                        virtual HRESULT STDMETHODCALLTYPE TryEnableAsync(
                            IAsyncOperation<ABI::boolean> **asyncOperation) = 0;

                        virtual HRESULT STDMETHODCALLTYPE TryResetAsync(
                            IAsyncOperation<ABI::boolean> **asyncOperation) = 0;

                        virtual HRESULT STDMETHODCALLTYPE TryUnloadEffectAsync(
                            IForceFeedbackEffect *effect,
                            IAsyncOperation<ABI::boolean> **asyncOperation) = 0;

                    };
                }
            }
        }
    }
}
extern "C" {
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ABI::Windows::Gaming::Input::ForceFeedback::IForceFeedbackMotor, 0x8d3d417c, 0xa5ea, 0x4516, 0x80,0x26, 0x2b,0x00,0xf7,0x4e,0xf6,0xe5)
#endif
#else
typedef struct __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotorVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        TrustLevel *trustLevel);

    /*** IForceFeedbackMotor methods ***/
    HRESULT (STDMETHODCALLTYPE *get_AreEffectsPaused)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        boolean *value);

    HRESULT (STDMETHODCALLTYPE *get_MasterGain)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        DOUBLE *value);

    HRESULT (STDMETHODCALLTYPE *put_MasterGain)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        DOUBLE value);

    HRESULT (STDMETHODCALLTYPE *get_IsEnabled)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        boolean *value);

    HRESULT (STDMETHODCALLTYPE *get_SupportedAxes)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        enum __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackEffectAxes *value);

    HRESULT (STDMETHODCALLTYPE *LoadEffectAsync)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect *effect,
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult **asyncOperation);

    HRESULT (STDMETHODCALLTYPE *PauseAllEffects)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This);

    HRESULT (STDMETHODCALLTYPE *ResumeAllEffects)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This);

    HRESULT (STDMETHODCALLTYPE *StopAllEffects)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This);

    HRESULT (STDMETHODCALLTYPE *TryDisableAsync)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        __FIAsyncOperation_1_boolean **asyncOperation);

    HRESULT (STDMETHODCALLTYPE *TryEnableAsync)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        __FIAsyncOperation_1_boolean **asyncOperation);

    HRESULT (STDMETHODCALLTYPE *TryResetAsync)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        __FIAsyncOperation_1_boolean **asyncOperation);

    HRESULT (STDMETHODCALLTYPE *TryUnloadEffectAsync)(
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *This,
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect *effect,
        __FIAsyncOperation_1_boolean **asyncOperation);

    END_INTERFACE
} __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotorVtbl;

interface __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor {
    CONST_VTBL __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotorVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_AddRef(This) (This)->lpVtbl->AddRef(This)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
/*** IForceFeedbackMotor methods ***/
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_AreEffectsPaused(This,value) (This)->lpVtbl->get_AreEffectsPaused(This,value)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_MasterGain(This,value) (This)->lpVtbl->get_MasterGain(This,value)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_put_MasterGain(This,value) (This)->lpVtbl->put_MasterGain(This,value)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_IsEnabled(This,value) (This)->lpVtbl->get_IsEnabled(This,value)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_SupportedAxes(This,value) (This)->lpVtbl->get_SupportedAxes(This,value)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_LoadEffectAsync(This,effect,asyncOperation) (This)->lpVtbl->LoadEffectAsync(This,effect,asyncOperation)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_PauseAllEffects(This) (This)->lpVtbl->PauseAllEffects(This)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_ResumeAllEffects(This) (This)->lpVtbl->ResumeAllEffects(This)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_StopAllEffects(This) (This)->lpVtbl->StopAllEffects(This)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryDisableAsync(This,asyncOperation) (This)->lpVtbl->TryDisableAsync(This,asyncOperation)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryEnableAsync(This,asyncOperation) (This)->lpVtbl->TryEnableAsync(This,asyncOperation)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryResetAsync(This,asyncOperation) (This)->lpVtbl->TryResetAsync(This,asyncOperation)
#define __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryUnloadEffectAsync(This,effect,asyncOperation) (This)->lpVtbl->TryUnloadEffectAsync(This,effect,asyncOperation)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_QueryInterface(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_AddRef(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_Release(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetIids(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetRuntimeClassName(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetTrustLevel(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
/*** IForceFeedbackMotor methods ***/
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_AreEffectsPaused(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,boolean *value) {
    return This->lpVtbl->get_AreEffectsPaused(This,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_MasterGain(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,DOUBLE *value) {
    return This->lpVtbl->get_MasterGain(This,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_put_MasterGain(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,DOUBLE value) {
    return This->lpVtbl->put_MasterGain(This,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_IsEnabled(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,boolean *value) {
    return This->lpVtbl->get_IsEnabled(This,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_SupportedAxes(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,enum __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackEffectAxes *value) {
    return This->lpVtbl->get_SupportedAxes(This,value);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_LoadEffectAsync(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect *effect,__FIAsyncOperation_1_ForceFeedbackLoadEffectResult **asyncOperation) {
    return This->lpVtbl->LoadEffectAsync(This,effect,asyncOperation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_PauseAllEffects(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This) {
    return This->lpVtbl->PauseAllEffects(This);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_ResumeAllEffects(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This) {
    return This->lpVtbl->ResumeAllEffects(This);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_StopAllEffects(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This) {
    return This->lpVtbl->StopAllEffects(This);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryDisableAsync(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,__FIAsyncOperation_1_boolean **asyncOperation) {
    return This->lpVtbl->TryDisableAsync(This,asyncOperation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryEnableAsync(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,__FIAsyncOperation_1_boolean **asyncOperation) {
    return This->lpVtbl->TryEnableAsync(This,asyncOperation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryResetAsync(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,__FIAsyncOperation_1_boolean **asyncOperation) {
    return This->lpVtbl->TryResetAsync(This,asyncOperation);
}
static FORCEINLINE HRESULT __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryUnloadEffectAsync(__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor* This,__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackEffect *effect,__FIAsyncOperation_1_boolean **asyncOperation) {
    return This->lpVtbl->TryUnloadEffectAsync(This,effect,asyncOperation);
}
#endif
#ifdef WIDL_USING_WINDOWS_GAMING_INPUT_FORCEFEEDBACK_IFORCEFEEDBACKMOTOR
#define IID_IForceFeedbackMotor IID___x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor
#define IForceFeedbackMotorVtbl __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotorVtbl
#define IForceFeedbackMotor __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor
#define IForceFeedbackMotor_QueryInterface __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_QueryInterface
#define IForceFeedbackMotor_AddRef __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_AddRef
#define IForceFeedbackMotor_Release __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_Release
#define IForceFeedbackMotor_GetIids __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetIids
#define IForceFeedbackMotor_GetRuntimeClassName __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetRuntimeClassName
#define IForceFeedbackMotor_GetTrustLevel __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_GetTrustLevel
#define IForceFeedbackMotor_get_AreEffectsPaused __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_AreEffectsPaused
#define IForceFeedbackMotor_get_MasterGain __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_MasterGain
#define IForceFeedbackMotor_put_MasterGain __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_put_MasterGain
#define IForceFeedbackMotor_get_IsEnabled __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_IsEnabled
#define IForceFeedbackMotor_get_SupportedAxes __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_get_SupportedAxes
#define IForceFeedbackMotor_LoadEffectAsync __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_LoadEffectAsync
#define IForceFeedbackMotor_PauseAllEffects __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_PauseAllEffects
#define IForceFeedbackMotor_ResumeAllEffects __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_ResumeAllEffects
#define IForceFeedbackMotor_StopAllEffects __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_StopAllEffects
#define IForceFeedbackMotor_TryDisableAsync __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryDisableAsync
#define IForceFeedbackMotor_TryEnableAsync __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryEnableAsync
#define IForceFeedbackMotor_TryResetAsync __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryResetAsync
#define IForceFeedbackMotor_TryUnloadEffectAsync __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_TryUnloadEffectAsync
#endif /* WIDL_USING__WINDOWS_GAMING_INPUT_FORCEFEEDBACK_IFORCEFEEDBACKMOTOR */
#endif

#endif

#endif  /* ____x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor_INTERFACE_DEFINED__ */
#endif /* WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000 */

/*
 * Class Windows.Gaming.Input.ForceFeedback.ForceFeedbackMotor
 *
 * Introduced to Windows.Foundation.UniversalApiContract in version 3.0
 *
 * Class implements the following interfaces:
 *    Windows.Gaming.Input.ForceFeedback.IForceFeedbackMotor ** Default Interface **
 *
 * Class Threading Model:  Both Single and Multi Threaded Apartment
 *
 * Class Marshaling Behavior:  Agile - Class is agile
 *
 */
#if WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000
#ifndef RUNTIMECLASS_Windows_Gaming_Input_ForceFeedback_ForceFeedbackMotor_DEFINED
#define RUNTIMECLASS_Windows_Gaming_Input_ForceFeedback_ForceFeedbackMotor_DEFINED
static const DECLSPEC_SELECTANY WCHAR RuntimeClass_Windows_Gaming_Input_ForceFeedback_ForceFeedbackMotor[] = {'W','i','n','d','o','w','s','.','G','a','m','i','n','g','.','I','n','p','u','t','.','F','o','r','c','e','F','e','e','d','b','a','c','k','.','F','o','r','c','e','F','e','e','d','b','a','c','k','M','o','t','o','r',0};
#endif /* RUNTIMECLASS_Windows_Gaming_Input_ForceFeedback_ForceFeedbackMotor_DEFINED */
#endif /* WINDOWS_FOUNDATION_UNIVERSALAPICONTRACT_VERSION >= 0x30000 */

/*****************************************************************************
 * IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult> interface
 *
 */
#ifndef ____FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_INTERFACE_DEFINED__
#define ____FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_INTERFACE_DEFINED__

DEFINE_GUID(IID___FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult, 0xf8220a41, 0xf738, 0x51e8, 0x89,0xba, 0x76,0xbb,0xd6,0x61,0x58,0xcb);
#if defined(__cplusplus) && !defined(CINTERFACE)
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            template<>
            MIDL_INTERFACE("f8220a41-f738-51e8-89ba-76bbd66158cb")
            IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult> : public IUnknown
            {
                virtual void STDMETHODCALLTYPE Invoke(
                    IAsyncOperation<ABI::ForceFeedbackLoadEffectResult> *info,
                    AsyncStatus status) = 0;

            };
        }
    }
}
extern "C" {
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ABI::Windows::Foundation::IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult>, 0xf8220a41, 0xf738, 0x51e8, 0x89,0xba, 0x76,0xbb,0xd6,0x61,0x58,0xcb)
#endif
#else
typedef struct __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResultVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult *This);

    /*** IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult> methods ***/
    void (STDMETHODCALLTYPE *Invoke)(
        __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult *This,
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *info,
        AsyncStatus status);

    END_INTERFACE
} __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResultVtbl;

interface __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult {
    CONST_VTBL __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResultVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_AddRef(This) (This)->lpVtbl->AddRef(This)
#define __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_Release(This) (This)->lpVtbl->Release(This)
/*** IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult> methods ***/
#define __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_Invoke(This,info,status) (This)->lpVtbl->Invoke(This,info,status)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_QueryInterface(__FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_AddRef(__FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_Release(__FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult* This) {
    return This->lpVtbl->Release(This);
}
/*** IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult> methods ***/
static FORCEINLINE void __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_Invoke(__FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult* This,__FIAsyncOperation_1_ForceFeedbackLoadEffectResult *info,AsyncStatus status) {
    This->lpVtbl->Invoke(This,info,status);
}
#endif
#ifdef WIDL_USING_IASYNCOPERATIONCOMPLETEDHANDLER_1_FORCEFEEDBACKLOADEFFECTRESULT
#define IID_IAsyncOperationCompletedHandler_ForceFeedbackLoadEffectResult IID___FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult
#define IAsyncOperationCompletedHandler_ForceFeedbackLoadEffectResultVtbl __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResultVtbl
#define IAsyncOperationCompletedHandler_ForceFeedbackLoadEffectResult __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult
#define IAsyncOperationCompletedHandler_ForceFeedbackLoadEffectResult_QueryInterface __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_QueryInterface
#define IAsyncOperationCompletedHandler_ForceFeedbackLoadEffectResult_AddRef __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_AddRef
#define IAsyncOperationCompletedHandler_ForceFeedbackLoadEffectResult_Release __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_Release
#define IAsyncOperationCompletedHandler_ForceFeedbackLoadEffectResult_Invoke __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_Invoke
#endif /* WIDL_USING__IASYNCOPERATIONCOMPLETEDHANDLER_1_FORCEFEEDBACKLOADEFFECTRESULT */
#endif

#endif

#endif  /* ____FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IAsyncOperation<ABI::ForceFeedbackLoadEffectResult> interface
 *
 */
#ifndef ____FIAsyncOperation_1_ForceFeedbackLoadEffectResult_INTERFACE_DEFINED__
#define ____FIAsyncOperation_1_ForceFeedbackLoadEffectResult_INTERFACE_DEFINED__

DEFINE_GUID(IID___FIAsyncOperation_1_ForceFeedbackLoadEffectResult, 0x21f834fc, 0xe845, 0x5ab9, 0xbf,0x85, 0x95,0x34,0xe2,0x39,0x77,0x98);
#if defined(__cplusplus) && !defined(CINTERFACE)
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            template<>
            MIDL_INTERFACE("21f834fc-e845-5ab9-bf85-9534e2397798")
            IAsyncOperation<ABI::ForceFeedbackLoadEffectResult> : public IInspectable
            {
                virtual HRESULT STDMETHODCALLTYPE put_Completed(
                    IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult> *handler) = 0;

                virtual HRESULT STDMETHODCALLTYPE get_Completed(
                    IAsyncOperationCompletedHandler<ABI::ForceFeedbackLoadEffectResult> **handler) = 0;

                virtual HRESULT STDMETHODCALLTYPE GetResults(
                    enum ForceFeedbackLoadEffectResult **results) = 0;

            };
        }
    }
}
extern "C" {
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ABI::Windows::Foundation::IAsyncOperation<ABI::ForceFeedbackLoadEffectResult>, 0x21f834fc, 0xe845, 0x5ab9, 0xbf,0x85, 0x95,0x34,0xe2,0x39,0x77,0x98)
#endif
#else
typedef struct __FIAsyncOperation_1_ForceFeedbackLoadEffectResultVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This,
        TrustLevel *trustLevel);

    /*** IAsyncOperation<ABI::ForceFeedbackLoadEffectResult> methods ***/
    HRESULT (STDMETHODCALLTYPE *put_Completed)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This,
        __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult *handler);

    HRESULT (STDMETHODCALLTYPE *get_Completed)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This,
        __FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult **handler);

    HRESULT (STDMETHODCALLTYPE *GetResults)(
        __FIAsyncOperation_1_ForceFeedbackLoadEffectResult *This,
        enum __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackLoadEffectResult **results);

    END_INTERFACE
} __FIAsyncOperation_1_ForceFeedbackLoadEffectResultVtbl;

interface __FIAsyncOperation_1_ForceFeedbackLoadEffectResult {
    CONST_VTBL __FIAsyncOperation_1_ForceFeedbackLoadEffectResultVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_AddRef(This) (This)->lpVtbl->AddRef(This)
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
/*** IAsyncOperation<ABI::ForceFeedbackLoadEffectResult> methods ***/
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_put_Completed(This,handler) (This)->lpVtbl->put_Completed(This,handler)
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_get_Completed(This,handler) (This)->lpVtbl->get_Completed(This,handler)
#define __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetResults(This,results) (This)->lpVtbl->GetResults(This,results)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_QueryInterface(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_AddRef(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_Release(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static FORCEINLINE HRESULT __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetIids(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static FORCEINLINE HRESULT __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetRuntimeClassName(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static FORCEINLINE HRESULT __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetTrustLevel(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
/*** IAsyncOperation<ABI::ForceFeedbackLoadEffectResult> methods ***/
static FORCEINLINE HRESULT __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_put_Completed(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This,__FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult *handler) {
    return This->lpVtbl->put_Completed(This,handler);
}
static FORCEINLINE HRESULT __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_get_Completed(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This,__FIAsyncOperationCompletedHandler_1_ForceFeedbackLoadEffectResult **handler) {
    return This->lpVtbl->get_Completed(This,handler);
}
static FORCEINLINE HRESULT __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetResults(__FIAsyncOperation_1_ForceFeedbackLoadEffectResult* This,enum __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CForceFeedbackLoadEffectResult **results) {
    return This->lpVtbl->GetResults(This,results);
}
#endif
#ifdef WIDL_USING_IASYNCOPERATION_1_FORCEFEEDBACKLOADEFFECTRESULT
#define IID_IAsyncOperation_ForceFeedbackLoadEffectResult IID___FIAsyncOperation_1_ForceFeedbackLoadEffectResult
#define IAsyncOperation_ForceFeedbackLoadEffectResultVtbl __FIAsyncOperation_1_ForceFeedbackLoadEffectResultVtbl
#define IAsyncOperation_ForceFeedbackLoadEffectResult __FIAsyncOperation_1_ForceFeedbackLoadEffectResult
#define IAsyncOperation_ForceFeedbackLoadEffectResult_QueryInterface __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_QueryInterface
#define IAsyncOperation_ForceFeedbackLoadEffectResult_AddRef __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_AddRef
#define IAsyncOperation_ForceFeedbackLoadEffectResult_Release __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_Release
#define IAsyncOperation_ForceFeedbackLoadEffectResult_GetIids __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetIids
#define IAsyncOperation_ForceFeedbackLoadEffectResult_GetRuntimeClassName __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetRuntimeClassName
#define IAsyncOperation_ForceFeedbackLoadEffectResult_GetTrustLevel __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetTrustLevel
#define IAsyncOperation_ForceFeedbackLoadEffectResult_put_Completed __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_put_Completed
#define IAsyncOperation_ForceFeedbackLoadEffectResult_get_Completed __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_get_Completed
#define IAsyncOperation_ForceFeedbackLoadEffectResult_GetResults __FIAsyncOperation_1_ForceFeedbackLoadEffectResult_GetResults
#endif /* WIDL_USING__IASYNCOPERATION_1_FORCEFEEDBACKLOADEFFECTRESULT */
#endif

#endif

#endif  /* ____FIAsyncOperation_1_ForceFeedbackLoadEffectResult_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*> interface
 *
 */
#ifndef ____FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_INTERFACE_DEFINED__
#define ____FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_INTERFACE_DEFINED__

DEFINE_GUID(IID___FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor, 0x5bfc5070, 0x101d, 0x5fbb, 0x8d,0x5f, 0xce,0x5c,0x23,0xbe,0xcd,0xd9);
#if defined(__cplusplus) && !defined(CINTERFACE)
} /* extern "C" */
namespace ABI {
    namespace Windows {
        namespace Foundation {
            namespace Collections {
                template<>
                MIDL_INTERFACE("5bfc5070-101d-5fbb-8d5f-ce5c23becdd9")
                IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*> : public IInspectable
                {
                    virtual HRESULT STDMETHODCALLTYPE GetAt(
                        ULONG index,
                        IForceFeedbackMotor **value) = 0;

                    virtual HRESULT STDMETHODCALLTYPE get_Size(
                        ULONG *value) = 0;

                    virtual HRESULT STDMETHODCALLTYPE IndexOf(
                        IForceFeedbackMotor *element,
                        ULONG *index,
                        BOOLEAN *value) = 0;

                    virtual HRESULT STDMETHODCALLTYPE GetMany(
                        ULONG start_index,
                        IForceFeedbackMotor **items,
                        ULONG *value) = 0;

                };
            }
        }
    }
}
extern "C" {
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ABI::Windows::Foundation::Collections::IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*>, 0x5bfc5070, 0x101d, 0x5fbb, 0x8d,0x5f, 0xce,0x5c,0x23,0xbe,0xcd,0xd9)
#endif
#else
typedef struct __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotorVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        TrustLevel *trustLevel);

    /*** IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*> methods ***/
    HRESULT (STDMETHODCALLTYPE *GetAt)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        ULONG index,
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor **value);

    HRESULT (STDMETHODCALLTYPE *get_Size)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        ULONG *value);

    HRESULT (STDMETHODCALLTYPE *IndexOf)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *element,
        ULONG *index,
        BOOLEAN *value);

    HRESULT (STDMETHODCALLTYPE *GetMany)(
        __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor *This,
        ULONG start_index,
        __x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor **items,
        ULONG *value);

    END_INTERFACE
} __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotorVtbl;

interface __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor {
    CONST_VTBL __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotorVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_AddRef(This) (This)->lpVtbl->AddRef(This)
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
/*** IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*> methods ***/
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetAt(This,index,value) (This)->lpVtbl->GetAt(This,index,value)
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_get_Size(This,value) (This)->lpVtbl->get_Size(This,value)
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_IndexOf(This,element,index,value) (This)->lpVtbl->IndexOf(This,element,index,value)
#define __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetMany(This,start_index,items,value) (This)->lpVtbl->GetMany(This,start_index,items,value)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_QueryInterface(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_AddRef(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_Release(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetIids(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetRuntimeClassName(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetTrustLevel(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
/*** IVectorView<ABI::Windows::Gaming::Input::ForceFeedback::ForceFeedbackMotor*> methods ***/
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetAt(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,ULONG index,__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor **value) {
    return This->lpVtbl->GetAt(This,index,value);
}
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_get_Size(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,ULONG *value) {
    return This->lpVtbl->get_Size(This,value);
}
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_IndexOf(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor *element,ULONG *index,BOOLEAN *value) {
    return This->lpVtbl->IndexOf(This,element,index,value);
}
static FORCEINLINE HRESULT __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetMany(__FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor* This,ULONG start_index,__x_ABI_CWindows_CGaming_CInput_CForceFeedback_CIForceFeedbackMotor **items,ULONG *value) {
    return This->lpVtbl->GetMany(This,start_index,items,value);
}
#endif
#ifdef WIDL_USING_IVECTORVIEW_1_WINDOWS_GAMING_INPUT_FORCEFEEDBACK_FORCEFEEDBACKMOTOR
#define IID_IVectorView_ForceFeedbackMotor IID___FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor
#define IVectorView_ForceFeedbackMotorVtbl __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotorVtbl
#define IVectorView_ForceFeedbackMotor __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor
#define IVectorView_ForceFeedbackMotor_QueryInterface __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_QueryInterface
#define IVectorView_ForceFeedbackMotor_AddRef __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_AddRef
#define IVectorView_ForceFeedbackMotor_Release __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_Release
#define IVectorView_ForceFeedbackMotor_GetIids __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetIids
#define IVectorView_ForceFeedbackMotor_GetRuntimeClassName __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetRuntimeClassName
#define IVectorView_ForceFeedbackMotor_GetTrustLevel __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetTrustLevel
#define IVectorView_ForceFeedbackMotor_GetAt __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetAt
#define IVectorView_ForceFeedbackMotor_get_Size __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_get_Size
#define IVectorView_ForceFeedbackMotor_IndexOf __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_IndexOf
#define IVectorView_ForceFeedbackMotor_GetMany __FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_GetMany
#endif /* WIDL_USING__IVECTORVIEW_1_WINDOWS_GAMING_INPUT_FORCEFEEDBACK_FORCEFEEDBACKMOTOR */
#endif

#endif

#endif  /* ____FIVectorView_1_Windows__CGaming__CInput__CForceFeedback__CForceFeedbackMotor_INTERFACE_DEFINED__ */

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __windows_gaming_input_forcefeedback_h__ */
